user <user>;
worker_processes auto;
pid <nginx_run>/nginx.pid;
include <nginx>/modules-enabled/*.conf;

error_log <nginx_log>/error.log warn;

events {
	worker_connections 768;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

    access_log <nginx_log>/access.log;
    proxy_temp_path <nginx_var>;
    client_body_temp_path <nginx_var>;
    fastcgi_temp_path <nginx_var>;
    scgi_temp_path <nginx_var>;
    uwsgi_temp_path <nginx_var>;

	##
	# Gzip Settings
	##

	gzip on;

	##
	# Virtual Host Configs
	##

	include <nginx>/conf.d/*.conf;
	include <nginx>/sites-enabled/*;

    # Angular app config
     # include the default mime.types to map file extensions to MIME types
    include /etc/nginx/mime.types;

    server {
        listen 4200;
        # set the root directory for the server (we need to copy our
        # application files here)
        root /usr/share/nginx/html;

        # set the default index file for the server (Angular generates the
        # index.html file for us and it will be in the above directory)
        index index.html;

        # specify the configuration for the '/' location
        location / {
            # try to serve the requested URI. if that fails then try to
            # serve the URI with a trailing slash. if that fails, then
            # serve the index.html file; this is needed in order to serve
            # Angular routes--e.g.,'localhost:8080/customer' will serve
            # the index.html file
            try_files $uri $uri/ /index.html;
        }
    }
}